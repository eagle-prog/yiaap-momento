<?php //%255Bb0ac8de82d3cef5d8788eb97ea622215%255D%255B1%255D

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Query\\ParserResult'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Query\\ParserResult')),
        clone ($p['Doctrine\\ORM\\Query\\Exec\\SingleSelectExecutor'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Query\\Exec\\SingleSelectExecutor')),
        clone ($p['Doctrine\\ORM\\Query\\ResultSetMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Query\\ResultSetMapping')),
    ],
    null,
    [
        'Doctrine\\ORM\\Query\\ParserResult' => [
            '_sqlExecutor' => [
                $o[1],
            ],
            '_resultSetMapping' => [
                $o[2],
            ],
            '_parameterMappings' => [
                [
                    'status' => [
                        0,
                    ],
                    'organizer' => [
                        1,
                    ],
                    'datefrom' => [
                        2,
                    ],
                    'dateto' => [
                        3,
                    ],
                ],
            ],
        ],
        'Doctrine\\ORM\\Query\\Exec\\AbstractSqlExecutor' => [
            '_sqlStatements' => [
                1 => 'SELECT SUM(e0_.quantity) AS sclr_0, DATE(e1_.created_at) AS sclr_1 FROM eventic_order e1_ LEFT JOIN eventic_order_element e0_ ON e1_.id = e0_.order_id AND (e0_.deleted_at IS NULL) LEFT JOIN eventic_event_date_ticket e2_ ON e0_.eventticket_id = e2_.id LEFT JOIN eventic_event_date e3_ ON e2_.eventdate_id = e3_.id LEFT JOIN eventic_event e4_ ON e3_.event_id = e4_.id AND (e4_.deleted_at IS NULL) LEFT JOIN eventic_organizer e5_ ON e4_.organizer_id = e5_.id AND (e5_.deleted_at IS NULL) WHERE (e1_.status = ? AND e5_.slug = ? AND e1_.created_at >= ? AND e1_.created_at <= ?) AND (e1_.deleted_at IS NULL) GROUP BY sclr_1 ORDER BY e1_.created_at ASC',
            ],
        ],
        'stdClass' => [
            'scalarMappings' => [
                2 => [
                    'sclr_0' => 1,
                    'sclr_1' => 'dateCreatedAt',
                ],
            ],
            'typeMappings' => [
                2 => [
                    'sclr_0' => 'string',
                    'sclr_1' => 'string',
                ],
            ],
        ],
    ],
    $o[0],
    []
); }];
