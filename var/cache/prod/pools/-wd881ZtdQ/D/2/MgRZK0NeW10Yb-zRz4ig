<?php //App.Entity.User

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
        $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\File'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\File')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'App\\Entity\\User',
                'translations',
                'organizer',
                'firstname',
                6 => 'lastname',
                9 => 'phone',
                11 => 'avatarFile',
            ],
            'defaultGroup' => [
                'User',
            ],
            'members' => [
                [
                    'translations' => [
                        $o[1],
                    ],
                    'organizer' => [
                        $o[2],
                    ],
                    'firstname' => [
                        $o[3],
                    ],
                    'lastname' => [
                        $o[6],
                    ],
                    'phone' => [
                        $o[9],
                    ],
                    'avatarFile' => [
                        $o[11],
                    ],
                ],
            ],
            'properties' => [
                [
                    'translations' => $o[1],
                    'organizer' => $o[2],
                    'firstname' => $o[3],
                    'lastname' => $o[6],
                    'phone' => $o[9],
                    'avatarFile' => $o[11],
                ],
            ],
            'class' => [
                1 => 'App\\Entity\\User',
                'App\\Entity\\User',
                'App\\Entity\\User',
                6 => 'App\\Entity\\User',
                9 => 'App\\Entity\\User',
                11 => 'App\\Entity\\User',
            ],
            'property' => [
                1 => 'translations',
                'organizer',
                'firstname',
                6 => 'lastname',
                9 => 'phone',
                11 => 'avatarFile',
            ],
            'cascadingStrategy' => [
                1 => 2,
                2,
            ],
            'traversalStrategy' => [
                1 => 1,
                1,
            ],
            'constraints' => [
                3 => [
                    $o[4],
                    $o[5],
                ],
                6 => [
                    $o[7],
                    $o[8],
                ],
                9 => [
                    $o[10],
                ],
                11 => [
                    $o[12],
                ],
            ],
            'constraintsByGroup' => [
                3 => [
                    'Default' => [
                        $o[4],
                        $o[5],
                    ],
                    'User' => [
                        $o[4],
                        $o[5],
                    ],
                ],
                6 => [
                    'Default' => [
                        $o[7],
                        $o[8],
                    ],
                    'User' => [
                        $o[7],
                        $o[8],
                    ],
                ],
                9 => [
                    'Default' => [
                        $o[10],
                    ],
                    'User' => [
                        $o[10],
                    ],
                ],
                11 => [
                    'Default' => [
                        $o[12],
                    ],
                    'User' => [
                        $o[12],
                    ],
                ],
            ],
            'groups' => [
                4 => [
                    'Default',
                    'User',
                ],
                [
                    'Default',
                    'User',
                ],
                7 => [
                    'Default',
                    'User',
                ],
                [
                    'Default',
                    'User',
                ],
                10 => [
                    'Default',
                    'User',
                ],
                12 => [
                    'Default',
                    'User',
                ],
            ],
            'max' => [
                5 => 20,
                8 => 20,
                10 => 50,
            ],
            'min' => [
                5 => 2,
                8 => 2,
                10 => 1,
            ],
            'allowEmptyString' => [
                5 => false,
                8 => false,
            ],
            'binaryFormat' => [
                12 => false,
            ],
            'mimeTypes' => [
                12 => [
                    'image/jpeg',
                    'image/jpg',
                    'image/gif',
                    'image/png',
                ],
            ],
            'mimeTypesMessage' => [
                12 => 'The file should be an image',
            ],
        ],
        'Symfony\\Component\\Validator\\Constraints\\File' => [
            'maxSize' => [
                12 => 2000000,
            ],
        ],
    ],
    $o[0],
    []
); }];
