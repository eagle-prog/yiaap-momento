<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class EventTicket extends \App\Entity\EventTicket implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'id', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'eventdate', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'cartelements', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'orderelements', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'ticketreservations', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'active', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'reference', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'name', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'description', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'free', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'price', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'promotionalprice', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'quantity', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'ticketsperattendee', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'salesstartdate', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'salesenddate', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'position'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'id', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'eventdate', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'cartelements', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'orderelements', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'ticketreservations', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'active', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'reference', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'name', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'description', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'free', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'price', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'promotionalprice', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'quantity', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'ticketsperattendee', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'salesstartdate', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'salesenddate', '' . "\0" . 'App\\Entity\\EventTicket' . "\0" . 'position'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (EventTicket $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function generateReference($length)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'generateReference', [$length]);

        return parent::generateReference($length);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalCheckInPercentage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalCheckInPercentage', []);

        return parent::getTotalCheckInPercentage();
    }

    /**
     * {@inheritDoc}
     */
    public function getSalesPercentage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalesPercentage', []);

        return parent::getSalesPercentage();
    }

    /**
     * {@inheritDoc}
     */
    public function getScannedTicketsCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScannedTicketsCount', []);

        return parent::getScannedTicketsCount();
    }

    /**
     * {@inheritDoc}
     */
    public function getSales($role = 'all', $user = 'all', $formattedForPayoutApproval = false, $includeFees = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSales', [$role, $user, $formattedForPayoutApproval, $includeFees]);

        return parent::getSales($role, $user, $formattedForPayoutApproval, $includeFees);
    }

    /**
     * {@inheritDoc}
     */
    public function getTicketPricePercentageCutSum($role = 'all')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTicketPricePercentageCutSum', [$role]);

        return parent::getTicketPricePercentageCutSum($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalTicketFees($role = 'all', $user = 'all')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalTicketFees', [$role, $user]);

        return parent::getTotalTicketFees($role, $user);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalFees()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalFees', []);

        return parent::getTotalFees();
    }

    /**
     * {@inheritDoc}
     */
    public function isOnSale()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isOnSale', []);

        return parent::isOnSale();
    }

    /**
     * {@inheritDoc}
     */
    public function stringifyStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'stringifyStatus', []);

        return parent::stringifyStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function stringifyStatusClass()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'stringifyStatusClass', []);

        return parent::stringifyStatusClass();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderElementsQuantitySum($status = 1, $user = 'all', $role = 'all')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderElementsQuantitySum', [$status, $user, $role]);

        return parent::getOrderElementsQuantitySum($status, $user, $role);
    }

    /**
     * {@inheritDoc}
     */
    public function getValidTicketReservationsQuantitySum($user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValidTicketReservationsQuantitySum', [$user]);

        return parent::getValidTicketReservationsQuantitySum($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getValidTicketReservationExpirationDate($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValidTicketReservationExpirationDate', [$user]);

        return parent::getValidTicketReservationExpirationDate($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getTicketsLeftCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTicketsLeftCount', []);

        return parent::getTicketsLeftCount();
    }

    /**
     * {@inheritDoc}
     */
    public function getMaxTicketsForSaleCount($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaxTicketsForSaleCount', [$user]);

        return parent::getMaxTicketsForSaleCount($user);
    }

    /**
     * {@inheritDoc}
     */
    public function isSoldOut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSoldOut', []);

        return parent::isSoldOut();
    }

    /**
     * {@inheritDoc}
     */
    public function getSalePrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalePrice', []);

        return parent::getSalePrice();
    }

    /**
     * {@inheritDoc}
     */
    public function getEventdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEventdate', []);

        return parent::getEventdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setEventdate($eventdate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEventdate', [$eventdate]);

        return parent::setEventdate($eventdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', []);

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', [$active]);

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', []);

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', [$price]);

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getPromotionalprice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPromotionalprice', []);

        return parent::getPromotionalprice();
    }

    /**
     * {@inheritDoc}
     */
    public function setPromotionalprice($promotionalprice)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPromotionalprice', [$promotionalprice]);

        return parent::setPromotionalprice($promotionalprice);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuantity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuantity', []);

        return parent::getQuantity();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuantity($quantity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuantity', [$quantity]);

        return parent::setQuantity($quantity);
    }

    /**
     * {@inheritDoc}
     */
    public function getTicketsperattendee()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTicketsperattendee', []);

        return parent::getTicketsperattendee();
    }

    /**
     * {@inheritDoc}
     */
    public function setTicketsperattendee($ticketsperattendee)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTicketsperattendee', [$ticketsperattendee]);

        return parent::setTicketsperattendee($ticketsperattendee);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderelements()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderelements', []);

        return parent::getOrderelements();
    }

    /**
     * {@inheritDoc}
     */
    public function addOrderelement($orderelement)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOrderelement', [$orderelement]);

        return parent::addOrderelement($orderelement);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOrderelement($orderelement)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOrderelement', [$orderelement]);

        return parent::removeOrderelement($orderelement);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalesstartdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalesstartdate', []);

        return parent::getSalesstartdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setSalesstartdate($salesstartdate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalesstartdate', [$salesstartdate]);

        return parent::setSalesstartdate($salesstartdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalesenddate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalesenddate', []);

        return parent::getSalesenddate();
    }

    /**
     * {@inheritDoc}
     */
    public function setSalesenddate($salesenddate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalesenddate', [$salesenddate]);

        return parent::setSalesenddate($salesenddate);
    }

    /**
     * {@inheritDoc}
     */
    public function getReference()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReference', []);

        return parent::getReference();
    }

    /**
     * {@inheritDoc}
     */
    public function setReference($reference)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReference', [$reference]);

        return parent::setReference($reference);
    }

    /**
     * {@inheritDoc}
     */
    public function getCartelements()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCartelements', []);

        return parent::getCartelements();
    }

    /**
     * {@inheritDoc}
     */
    public function addCartelement($cartelement)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCartelement', [$cartelement]);

        return parent::addCartelement($cartelement);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCartelement($cartelement)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCartelement', [$cartelement]);

        return parent::removeCartelement($cartelement);
    }

    /**
     * {@inheritDoc}
     */
    public function getTicketreservations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTicketreservations', []);

        return parent::getTicketreservations();
    }

    /**
     * {@inheritDoc}
     */
    public function addTicketreservation($ticketreservation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTicketreservation', [$ticketreservation]);

        return parent::addTicketreservation($ticketreservation);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTicketreservation($ticketreservation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTicketreservation', [$ticketreservation]);

        return parent::removeTicketreservation($ticketreservation);
    }

    /**
     * {@inheritDoc}
     */
    public function getFree()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFree', []);

        return parent::getFree();
    }

    /**
     * {@inheritDoc}
     */
    public function setFree($free)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFree', [$free]);

        return parent::setFree($free);
    }

    /**
     * {@inheritDoc}
     */
    public function getPosition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPosition', []);

        return parent::getPosition();
    }

    /**
     * {@inheritDoc}
     */
    public function setPosition($position)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPosition', [$position]);

        return parent::setPosition($position);
    }

}
