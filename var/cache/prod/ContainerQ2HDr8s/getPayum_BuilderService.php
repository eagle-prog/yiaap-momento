<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'payum.builder' shared service.

include_once \dirname(__DIR__, 4).'/vendor/payum/core/Payum/Core/PayumBuilder.php';
include_once \dirname(__DIR__, 4).'/vendor/payum/core/Payum/Core/Bridge/Symfony/Builder/HttpRequestVerifierBuilder.php';
include_once \dirname(__DIR__, 4).'/vendor/payum/core/Payum/Core/Bridge/Symfony/Builder/TokenFactoryBuilder.php';
include_once \dirname(__DIR__, 4).'/vendor/symfony/dependency-injection/ContainerAwareTrait.php';
include_once \dirname(__DIR__, 4).'/vendor/payum/core/Payum/Core/Bridge/Symfony/Builder/CoreGatewayFactoryBuilder.php';

$this->services['payum.builder'] = $instance = new \Payum\Core\PayumBuilder();

$a = new \Payum\Core\Bridge\Symfony\Builder\CoreGatewayFactoryBuilder();
$a->setContainer($this);

$instance->setMainRegistry(($this->services['payum.static_registry'] ?? $this->load('getPayum_StaticRegistryService.php')));
$instance->setHttpRequestVerifier(new \Payum\Core\Bridge\Symfony\Builder\HttpRequestVerifierBuilder());
$instance->setTokenFactory(new \Payum\Core\Bridge\Symfony\Builder\TokenFactoryBuilder(($this->services['router'] ?? $this->getRouterService())));
$instance->setTokenStorage(($this->services['payum.security.token_storage'] ?? $this->load('getPayum_Security_TokenStorageService.php')));
$instance->setGenericTokenFactoryPaths(['capture' => 'payum_capture_do', 'notify' => 'payum_notify_do', 'authorize' => 'payum_authorize_do', 'refund' => 'payum_refund_do', 'cancel' => 'payum_cancel_do', 'payout' => 'payum_payout_do']);
$instance->setCoreGatewayFactory($a);
$instance->addCoreGatewayFactoryConfig(['payum.template.layout' => '@PayumCore\\layout.html.twig', 'payum.template.obtain_credit_card' => '@PayumSymfonyBridge\\obtainCreditCard.html.twig', 'payum.paths' => ['PayumSymfonyBridge' => (\dirname(__DIR__, 4).'/vendor/payum/core/Payum/Core/Bridge/Symfony/Resources/views')], 'payum.action.get_http_request' => ($this->services['payum.action.get_http_request'] ?? $this->load('getPayum_Action_GetHttpRequestService.php')), 'payum.action.obtain_credit_card' => ($this->services['payum.action.obtain_credit_card_builder'] ?? $this->load('getPayum_Action_ObtainCreditCardBuilderService.php'))]);
$instance->setGatewayConfigStorage(($this->services['payum.dynamic_gateways.config_storage'] ?? $this->load('getPayum_DynamicGateways_ConfigStorageService.php')));
$instance->addCoreGatewayFactoryConfig(['twig.env' => '@twig']);
$instance->addCoreGatewayFactoryConfig(['payum.extension.psr_logger' => '@payum.extension.logger', 'payum.extension.payum.extension.storage.app_entity_payment' => '@payum.extension.storage.app_entity_payment']);

return $instance;
