<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'Debril\RssAtomBundle\Response\FeedBuilder' shared autowired service.

include_once \dirname(__DIR__, 4).'/vendor/debril/rss-atom-bundle/Debril/RssAtomBundle/Response/FeedBuilder.php';
include_once \dirname(__DIR__, 4).'/vendor/debril/rss-atom-bundle/Debril/RssAtomBundle/Response/HeadersBuilder.php';
include_once \dirname(__DIR__, 4).'/vendor/debril/rss-atom-bundle/Debril/RssAtomBundle/Request/ModifiedSince.php';

$a = new \Debril\RssAtomBundle\Response\HeadersBuilder();
$a->setContentType('json', 'application/json');
$a->setContentType('xml', 'application/xhtml+xml');

return $this->privates['Debril\\RssAtomBundle\\Response\\FeedBuilder'] = new \Debril\RssAtomBundle\Response\FeedBuilder(($this->services['feedio'] ?? $this->load('getFeedioService.php')), $a, new \Debril\RssAtomBundle\Request\ModifiedSince(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService())), true);
